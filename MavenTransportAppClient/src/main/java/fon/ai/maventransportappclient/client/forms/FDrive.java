/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fon.ai.maventransportappclient.client.forms;

import fon.ai.maventransportappclient.controller.CommunicationController;
import fon.ai.maventransportappcommon.domain.Cost;
import fon.ai.maventransportappcommon.domain.Costs;
import fon.ai.maventransportappcommon.domain.Drive;
import fon.ai.maventransportappcommon.domain.Driver;
import fon.ai.maventransportappcommon.domain.Trailer;
import fon.ai.maventransportappcommon.domain.Truck;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author stackOverflow
 */
public class FDrive extends javax.swing.JFrame {

    FDriveMode mode;
    public Drive drive = null;
    FDrivesSearch parent;
    FMainForm fmf;
    
    /**
     * Creates new form Drive
     * @param parent
     * @param modal
     * @param mode
     * @param drive
     */
    /*public FDrive() {
        initComponents();
        srediFormu();
    }*/
    
     public FDrive(FDrivesSearch parent, boolean modal, FDriveMode mode, Drive drive, FMainForm fmf) {
        initComponents();
        this.setResizable(false);
        srediFormu();
        jButtonSave.setEnabled(false);

        setLocationRelativeTo(null);
        this.drive = drive;
        this.mode=mode;
        this.parent = parent;
        this.fmf = fmf;
        
        
        if (mode == FDriveMode.EDIT && drive != null) {
            addWindowListener(new WindowAdapter()
                {
                    @Override
                    public void windowClosing(WindowEvent e)
                    {
                        parent.setEnabled(true);
                        dispose();
                    }
                });
            setTitle("Update drive");
            populateFields();
        } else {
                addWindowListener(new WindowAdapter()
                {
                    @Override
                    public void windowClosing(WindowEvent e)
                    {
                        fmf.setEnabled(true);
                        dispose();
                    }
                });
            srediFormu();
            jTextCmr.setEditable(true);
            jComboBoxDrivers.setEnabled(true);
            jComboBoxTrailer.setEnabled(true);
            jComboBoxVehicle.setEnabled(true);
        }
        
        
     }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelDriver = new javax.swing.JLabel();
        jComboBoxDrivers = new javax.swing.JComboBox();
        jLabelTruck = new javax.swing.JLabel();
        jComboBoxVehicle = new javax.swing.JComboBox();
        jLabelPrice = new javax.swing.JLabel();
        jTextFieldPrice = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonCancel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabelTrailer = new javax.swing.JLabel();
        jComboBoxTrailer = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldDate = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextCmr = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adding new drive");

        jLabelDriver.setText("Driver:");

        jComboBoxDrivers.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelTruck.setText("Truck:");

        jComboBoxVehicle.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabelPrice.setText("Facture price: (EUR)");

        jTextFieldPrice.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPriceActionPerformed(evt);
            }
        });

        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonCancel.setText("Cancel");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jLabel1.setText("Costs: (required)");

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabelTrailer.setText("Trailer:");

        jComboBoxTrailer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel2.setText("Date: (dd/MM/yyyy)");

        jLabel3.setText("Cmr number:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelTruck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelPrice)
                            .addComponent(jLabelTrailer))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jComboBoxTrailer, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel2)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabelDriver)
                        .addGap(133, 133, 133)
                        .addComponent(jComboBoxDrivers, 0, 104, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jButtonSave))
                            .addComponent(jLabel3))
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonCancel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextFieldPrice)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 133, Short.MAX_VALUE)
                            .addComponent(jTextFieldDate)
                            .addComponent(jTextCmr))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jTextCmr, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDriver)
                    .addComponent(jComboBoxDrivers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTruck)
                    .addComponent(jComboBoxVehicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTrailer)
                    .addComponent(jComboBoxTrailer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPrice)
                    .addComponent(jTextFieldPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonCancel))
                .addGap(23, 23, 23))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JFrame frame = new FCosts(drive, this);
        frame.setVisible(true);
        this.setEnabled(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        int cmrNumber;
        try{
            cmrNumber = Integer.parseInt(jTextCmr.getText());
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Broj CMR-a je jedinstveni broj, stoga mora biti broj > 0");
            return;
        }
        Driver d = (Driver) jComboBoxDrivers.getSelectedItem();
        Truck t = (Truck) jComboBoxVehicle.getSelectedItem();
        Trailer tr = (Trailer) jComboBoxTrailer.getSelectedItem();
        double facturePrice;
        try{
            facturePrice = Double.parseDouble(jTextFieldPrice.getText());
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Iznos fakture mora da bude pozitivan realan broj");
            return;
        }
        if(facturePrice < 0){
            JOptionPane.showMessageDialog(this, "Iznos fakture mora da bude pozitivan realan broj");
            return;
        }
        try {
            ArrayList<Cost> costs = CommunicationController.getInstance().getCosts();
            Date date;
            try{
                date = new SimpleDateFormat("dd/MM/yyyy").parse(jTextFieldDate.getText());
            }catch(Exception ex){
                JOptionPane.showMessageDialog(this, "Datum nije unesen u validnom formatu!");
                return;
            }
            
            
            if(mode != FDriveMode.EDIT){
                try {
                    Drive driveWithCosts = new Drive(cmrNumber, date, facturePrice, tr, t, d, costs);
                    CommunicationController.getInstance().insertDrive(driveWithCosts);
                    JOptionPane.showMessageDialog(this, "Uspesno unesena voznja u bazu!");
                    fmf.omoguciIzmenu();
                    this.dispose();
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(this, "Neuspesan unos voznje u bazu!");
                }
            }else{
                    System.out.println("USAO U UPDAJTOVANJE VOZNJE!!!!!");
                    drive.setCosts(costs);
                    drive.setDate(date);
                    drive.setFacturePrice(facturePrice);
                    drive.setTr(tr);
                    drive.setT(t);
                    drive.setD(d);
                    drive.setId(cmrNumber);
                    CommunicationController.getInstance().updateDrive(drive);
                    JOptionPane.showMessageDialog(this, "Uspesno izmenjena voznja u bazu!");
                    parent.setEnabled(true);
                    parent.srediTabelu();
                    this.dispose();
            }
            
            
        } catch (Exception ex) {
            Logger.getLogger(FDrive.class.getName()).log(Level.SEVERE, null, ex);
        }
       
        
        
        
        
        
        
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        this.dispose();
        if(parent != null)
        parent.setEnabled(true);
        if(fmf != null)
            fmf.setEnabled(true);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jTextFieldPriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPriceActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox jComboBoxDrivers;
    private javax.swing.JComboBox jComboBoxTrailer;
    private javax.swing.JComboBox jComboBoxVehicle;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabelDriver;
    private javax.swing.JLabel jLabelPrice;
    private javax.swing.JLabel jLabelTrailer;
    private javax.swing.JLabel jLabelTruck;
    private javax.swing.JTextField jTextCmr;
    private javax.swing.JTextField jTextFieldDate;
    private javax.swing.JTextField jTextFieldPrice;
    // End of variables declaration//GEN-END:variables

    private void srediFormu() {
        try {
            List<Driver> drivers = CommunicationController.getInstance().vratiVozace();
            jComboBoxDrivers.removeAllItems();
            for (Driver d : drivers) {
                jComboBoxDrivers.addItem(d);
            }
            
            List<Truck> trucks = CommunicationController.getInstance().vratiVozila();
            jComboBoxVehicle.removeAllItems();
            for (Truck t : trucks) {
                jComboBoxVehicle.addItem(t);
            }
            
            List<Trailer> trailers = CommunicationController.getInstance().vratiPrikolice();
            jComboBoxTrailer.removeAllItems();
            for (Trailer t : trailers) {
                jComboBoxTrailer.addItem(t);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }

    private void populateFields() {
        jTextCmr.setText(Integer.toString(drive.getId()));
        jTextCmr.setEditable(false);
        jComboBoxDrivers.setEnabled(false);
        jComboBoxTrailer.setEnabled(false);
        jComboBoxVehicle.setEnabled(false);
        jComboBoxDrivers.setSelectedItem(drive.getD());
        jComboBoxVehicle.setSelectedItem(drive.getT());
        jComboBoxTrailer.setSelectedItem(drive.getTr());
        Double d = drive.getFacturePrice();
        jTextFieldPrice.setText(d.toString());
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        String dateString = sdf.format(drive.getDate());
        jTextFieldDate.setText(dateString);
    }
    
    public void omoguciSave(){
        jButtonSave.setEnabled(true);
        jButton1.setEnabled(false);
    }
}
