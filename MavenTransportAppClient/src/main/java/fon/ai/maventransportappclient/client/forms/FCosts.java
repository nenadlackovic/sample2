/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fon.ai.maventransportappclient.client.forms;

import fon.ai.maventransportappclient.controller.CommunicationController;
import fon.ai.maventransportappcommon.domain.Cost;
import fon.ai.maventransportappcommon.domain.CostType;
import fon.ai.maventransportappcommon.domain.Costs;
import fon.ai.maventransportappcommon.domain.Drive;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author stackOverflow
 */
public class FCosts extends javax.swing.JFrame {
    FDrive fd;
    Drive drive;
    /**
     * Creates new form FCosts
     */
    public FCosts(Drive drive, FDrive fd) {
        initComponents();
        this.setResizable(false);
        this.fd = fd;
        this.drive = drive;
        addWindowListener(new WindowAdapter()
                {
                    @Override
                    public void windowClosing(WindowEvent e)
                    {
                        fd.setEnabled(true);
                        dispose();
                    }
                });
        if(drive != null){
            for(Cost c : drive.getCosts()){
                if(c.getCostType().equals(CostType.driverSallary)){
                    jTextDriverSallary.setText(Double.toString(c.getAmount()));
                }
                if(c.getCostType().equals(CostType.fuel)){
                    jTextFuel.setText(Double.toString(c.getAmount()));
                }
                if(c.getCostType().equals(CostType.toll)){
                    jTextToll.setText(Double.toString(c.getAmount()));
                }
                if(c.getCostType().equals(CostType.other)){
                    jTextOther.setText(Double.toString(c.getAmount()));
                }
            }
        }
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jTextDriverSallary = new javax.swing.JTextField();
        jTextToll = new javax.swing.JTextField();
        jTextOther = new javax.swing.JTextField();
        jTextFuel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jButtonPrikaz = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Adding costs");

        jLabel1.setText("Driver Sallary:");

        jLabel2.setText("Fuel:");

        jLabel3.setText("Toll:");

        jButton2.setText("Cancel");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel5.setText("Other:");

        jLabel6.setText("(EUR)");

        jButton3.setText("Save");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButtonPrikaz.setText("Tabelarni Prikaz");
        jButtonPrikaz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPrikazActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextOther)
                            .addComponent(jTextFuel)
                            .addComponent(jTextToll)
                            .addComponent(jTextDriverSallary))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButtonPrikaz)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextDriverSallary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFuel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextToll, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextOther, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(jButton3)
                    .addComponent(jButtonPrikaz))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
        fd.setEnabled(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ArrayList<Cost> costs = new ArrayList<>();
        try{
            double driverSallary = Double.parseDouble(jTextDriverSallary.getText());
            costs.add(new Cost(CostType.driverSallary, driverSallary));
            double fuel = Double.parseDouble(jTextFuel.getText());
            costs.add(new Cost(CostType.fuel, fuel));
            double toll = Double.parseDouble(jTextToll.getText());
            costs.add(new Cost(CostType.toll, toll));
            double other = Double.parseDouble(jTextOther.getText());
            costs.add(new Cost(CostType.other, toll));
            if(driverSallary < 0 || fuel < 0 || toll < 0 || other < 0){
                JOptionPane.showMessageDialog(this, "Sva polja su realni pozitivni brojevi");
                return; 
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Sva polja su realni pozitivni brojevi");
            return;
        }
        try {
            CommunicationController.getInstance().setCosts(costs);
            this.dispose();
            fd.omoguciSave();
            fd.setEnabled(true);
        } catch (IOException ex) {
            Logger.getLogger(FCosts.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButtonPrikazActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPrikazActionPerformed
        ArrayList<Cost> costs = new ArrayList<>();
        try{
            double driverSallary = Double.parseDouble(jTextDriverSallary.getText());
            costs.add(new Cost(CostType.driverSallary, driverSallary));
            double fuel = Double.parseDouble(jTextFuel.getText());
            costs.add(new Cost(CostType.fuel, fuel));
            double toll = Double.parseDouble(jTextToll.getText());
            costs.add(new Cost(CostType.toll, toll));
            double other = Double.parseDouble(jTextOther.getText());
            costs.add(new Cost(CostType.other, toll));
            if(driverSallary < 0 || fuel < 0 || toll < 0 || other < 0){
                JOptionPane.showMessageDialog(this, "Sva polja su realni pozitivni brojevi");
                return; 
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Sva polja su realni pozitivni brojevi");
            return;
        }
        System.out.println("TROSKOVI SIZE" + costs.size());
        FPrikaz fp = new FPrikaz(costs);
        fp.setVisible(true);
    }//GEN-LAST:event_jButtonPrikazActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonPrikaz;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField jTextDriverSallary;
    private javax.swing.JTextField jTextFuel;
    private javax.swing.JTextField jTextOther;
    private javax.swing.JTextField jTextToll;
    // End of variables declaration//GEN-END:variables
}
